name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted, Production]

    strategy:
      matrix:
        dotnet: ["8.0.x"]

    env:
      PM2_HOME: /root/.pm2
      DOTNET_ENVIRONMENT: Production
      ASPNETCORE_ENVIRONMENT: Production
      CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      Smtp__Host: ${{ secrets.SMTP_HOST }}
      Smtp__Username: ${{ secrets.SMTP_USERNAME }}
      Smtp__Password: ${{ secrets.SMTP_PASSWORD }}
      Smtp__From: ${{ secrets.SMTP_FROM }}
      Smtp__Port: ${{ secrets.SMTP_PORT }}

    steps:
      - uses: actions/checkout@v3

      - name: Set HOME environment variable
        run: echo "HOME=/home/runner" >> $GITHUB_ENV

      - name: Setup .NET SDK ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Publish app
        run: dotnet publish -c Release -o /opt/actions-runners/backend-production/_work/__BACKEND_NAME__/__BACKEND_NAME__
      - name: Verify publish output
        run: |
          echo "Checking published files..."
          ls -l /opt/actions-runners/backend-production/_work/__BACKEND_NAME__/__BACKEND_NAME__/wwwroot
          if [ ! -d "/opt/actions-runners/backend-production/_work/__BACKEND_NAME__/__BACKEND_NAME__/wwwroot" ]; then
            echo "ERROR: wwwroot directory does not exist!"
            exit 1
          fi
      
          if [ -z "$(ls -A /opt/actions-runners/backend-production/_work/__BACKEND_NAME__/__BACKEND_NAME__/wwwroot)" ]; then
            echo "ERROR: wwwroot directory is empty!"
            exit 1
          fi
      
          # Optional: check for your specific CSS file
          if [ ! -f "/opt/actions-runners/backend-production/_work/__BACKEND_NAME__/__BACKEND_NAME__/wwwroot/WebAppBackend.styles.css" ]; then
            echo "ERROR: WebAppBackend.styles.css file is missing!"
            exit 1
          fi
      - name: Deploy with PM2
        env:
          DOTNET_ENVIRONMENT: Production
          ASPNETCORE_ENVIRONMENT: Production
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          Smtp__Host: ${{ secrets.SMTP_HOST }}
          Smtp__Username: ${{ secrets.SMTP_USERNAME }}
          Smtp__Password: ${{ secrets.SMTP_PASSWORD }}
          Smtp__From: ${{ secrets.SMTP_FROM }}
          Smtp__Port: ${{ secrets.SMTP_PORT }}
        run: |
          pm2 delete backend-production || true

          DOTNET_ENVIRONMENT=Production \
          ASPNETCORE_ENVIRONMENT=Production \
          CONNECTION_STRING="${{ secrets.CONNECTION_STRING }}" \
          ADMIN_PASSWORD="${{ secrets.ADMIN_PASSWORD }}" \
          Smtp__Host="${{ secrets.SMTP_HOST }}" \
          Smtp__Username="${{ secrets.SMTP_USERNAME }}" \
          Smtp__Password="${{ secrets.SMTP_PASSWORD }}" \
          Smtp__From="${{ secrets.SMTP_FROM }}" \
          Smtp__Port="${{ secrets.SMTP_PORT }}" \
          pm2 start /opt/actions-runners/backend-production/_work/__BACKEND_NAME__/__BACKEND_NAME__/WebAppBackend.dll \
            --name backend-production \
            --interpreter dotnet \
            --update-env

          pm2 save

      - name: Reload Nginx
        run: sudo service nginx restart
